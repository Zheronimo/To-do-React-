{"version":3,"sources":["componenets/todo-list-item/todo-list-item.jsx","componenets/todo-list/todo-list.jsx","componenets/app-header/app-header.jsx","componenets/search-panel/search-panel.jsx","componenets/item-status-filter/item-status-filter.jsx","componenets/item-add-form/item-add-form.jsx","componenets/app/app.jsx","index.js"],"names":["TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","done","className","onClick","type","TodoList","todos","elements","map","item","id","itemProps","key","AppHeader","titleName","toDo","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","placeholder","this","onChange","Component","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoDate","createTodoItem","deleteItem","idx","findIndex","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","el","todoCount","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.1df0c14b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./todo-list-item.css\";\r\n\r\nconst TodoListItem = ({\r\n  label,\r\n  onDeleted,\r\n  onToggleImportant,\r\n  onToggleDone,\r\n  important,\r\n  done,\r\n}) => {\r\n  let classNames = \"todo-list-item\";\r\n\r\n  if (done) {\r\n    classNames += \" done\";\r\n  }\r\n\r\n  if (important) {\r\n    classNames += \" important\";\r\n  }\r\n\r\n  return (\r\n    <div className={classNames}>\r\n      <span\r\n        className=\"todo-list-item-label\"\r\n        onClick={/*this.onLabelClick*/ onToggleDone}\r\n      >\r\n        {label}\r\n      </span>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-danger btn-sm float-right\"\r\n        onClick={onDeleted}\r\n      >\r\n        <i className=\"fa fa-trash-o\"></i>\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-success btn-sm float-right\"\r\n        onClick={/*this.onMarkImportant*/ onToggleImportant}\r\n      >\r\n        <i className=\"fa fa-exclamation\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default TodoListItem;\r\n","import React from \"react\";\r\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\r\nimport \"./todo-list.css\";\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n  return <ul className=\"list-group todo-list\">{elements}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport \"./app-header.css\";\r\n\r\nconst AppHeader = ({ titleName, toDo, done }) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1> {titleName}</h1>\r\n      <h2>\r\n        {toDo} more to do, {done} done\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React, { Component } from \"react\";\r\nimport \"./search-panel.css\";\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    term: \"\",\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        placeholder=\"type to search\"\r\n        className=\"search-panel\"\r\n        value={this.props.term}\r\n        onChange={this.onSearchChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n  state = {};\r\n\r\n  buttons = [\r\n    { name: \"all\", label: \"All\" },\r\n    { name: \"active\", label: \"Active\" },\r\n    { name: \"done\", label: \"Done\" },\r\n  ];\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? \"btn-info\" : \"btn-outline-secondary\";\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className={`btn ${clazz}`}\r\n          key={name}\r\n          onClick={() => onFilterChange(name)}\r\n        >\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return <div className=\"btn-group\">{buttons}</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./item-add-form.css\";\r\n\r\nexport default class ItemAddForm extends Component {\r\n  state = {\r\n    label: \"\",\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value,\r\n    });\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onItemAdded(this.state.label);\r\n    this.setState({ label: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          placeholder=\"What needs to be dane\"\r\n          onChange={this.onLabelChange}\r\n          value={this.state.label}\r\n        />\r\n        <button className=\"btn btn-outline-secondary\">Add</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TodoList from \"../todo-list/todo-list\";\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport SearchPanel from \"../search-panel/search-panel\";\r\nimport ItemStatusFilter from \"../item-status-filter/item-status-filter\";\r\nimport ItemAddForm from \"../item-add-form/item-add-form\";\r\n\r\nimport \"./app.css\";\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoDate: [\r\n      this.createTodoItem(\"Drink Coffee\"),\r\n      this.createTodoItem(\"Make Awesome App\"),\r\n      this.createTodoItem(\"Have a lunch\"),\r\n    ],\r\n    term: \"\",\r\n    filter: \"all\", //active, all, done\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++,\r\n    };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoDate }) => {\r\n      const idx = todoDate.findIndex((item) => item.id === id);\r\n      const newArr = [...todoDate.slice(0, idx), ...todoDate.slice(idx + 1)];\r\n      return {\r\n        todoDate: newArr,\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n    this.setState(({ todoDate }) => {\r\n      const newArr = [...todoDate, newItem];\r\n      return {\r\n        todoDate: newArr,\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    // 1. Update object\r\n    const idx = arr.findIndex((item) => item.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n    //2. construct new Arr\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoDate }) => {\r\n      return {\r\n        todoDate: this.toggleProperty(todoDate, id, \"important\"),\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoDate }) => {\r\n      return {\r\n        todoDate: this.toggleProperty(todoDate, id, \"done\"),\r\n      };\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case \"all\":\r\n        return items;\r\n      case \"active\":\r\n        return items.filter((item) => !item.done);\r\n      case \"done\":\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  render() {\r\n    const { todoDate, term, filter } = this.state;\r\n    const visibleItems = this.filter(this.search(todoDate, term), filter);\r\n    const doneCount = todoDate.filter((el) => el.done).length;\r\n    const todoCount = todoDate.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader titleName={\"Todo List\"} toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onSearchChange={this.onSearchChange} />\r\n          <ItemStatusFilter\r\n            filter={filter}\r\n            onFilterChange={this.onFilterChange}\r\n          />\r\n        </div>\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n        />\r\n        <ItemAddForm onItemAdded={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./componenets/app/app\";\r\nimport \"./index.css\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}